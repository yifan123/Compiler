.data
enter: .asciiz "\n"
.text
addi $sp, $sp,0
addu $gp, $sp, $0
jal main
main:
addi $sp, $sp,-8240
sw $ra,0($sp)
#将新的变量的值加载进全局寄存器
#将新的变量的值加载进全局寄存器__end
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#ASS @0  i
li $s0,0
#ASS @1  sum
li $s1,0
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#LAB   Lab_lj_2
Lab_lj_2:
#GEQ i @4 Lab_lj_3
li $s2,2048
bge $s0,$s2, Lab_lj_3
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#ARAS i i a
sll $fp, $s0,2
addu $fp,$fp,$sp
sw $s0, 24($fp)
#ADD i @5 i
addiu $s0,$s0,1
#JMP   Lab_lj_2
j Lab_lj_2
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#LAB   Lab_lj_3
Lab_lj_3:
#ASS @7  i
li $s0,0
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#LAB   Lab_lj_8
Lab_lj_8:
#GEQ i @10 Lab_lj_9
li $s2,2048
bge $s0,$s2, Lab_lj_9
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#ASAR i a @11
sll $fp, $s0,2
addu $fp,$fp,$sp
lw $s2, 24($fp)
#ADD sum @11 sum
addu $s1,$s1,$s2
#ADD i @13 i
addiu $s0,$s0,1
#JMP   Lab_lj_8
j Lab_lj_8
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#LAB   Lab_lj_9
Lab_lj_9:
#PRF sum 0 1
li $v0, 1
addu $a0,$s1,$0
syscall
li $v0, 4
la $a0,enter
syscall
#RET   
li $v0,10
syscall
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
#保存出口仍活跃的变量到内存，一般是分配了全局寄存器但没有分到的变量
#保存出口仍活跃的变量到内存__end
